# -*- coding: utf-8 -*-
"""class113.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nKfFW0A16_3WrXPgZitlfA5GUaYCq2sk
"""

import csv
import pandas as panda
import statistics
import plotly.express as px
import seaborn as sb
import plotly.figure_factory as ff
#calculating the IQR
#Arrange the data from accending order
#Find the mean
#Calculate the median of both the upper and lower half of the data
#IQR is the difference the upper and lower half of the median

#dataframe.quantile()

df = panda.DataFrame({'a':[1,2,3,4,5],'b':[6,7,8,9,10],'c':[11,12,13,14,15]})

#It gives us new data consisting quantiles
#it takes the index of the axis and which quantile you want to take
df.quantile([.1,.25,.5,.75],axis=0)

newData = panda.read_csv("finalSaving.csv")

scG = px.scatter(newData,x="age",y="quant_saved")
#scG.show()

sb.boxplot(data=newData,x=data["quant_saved"])

#remove the outliers
#quantile already helps us find the median so the data is in accending order
q1 = newData["quant_saved"].quantile(0.25)
print("Quantile 1: " + str(q1))

q3 = newData["quant_saved"].quantile(0.75)
print("Quantile 3: " + str(q3))

IQR = q3-q1

lowerWhisker = q1-1.5*IQR
upperWhisker = q3+1.5*IQR
print("IQR:" + str(IQR))
print("Lower Whisker: " + str(lowerWhisker))
print("Upper Whisker: " + str(upperWhisker))
#any saving that is greater than 213/upperwhisker is an outlier
newDf = newData[newData["quant_saved"]<upperWhisker]

lData = newDf["quant_saved"].tolist()
mean=statistics.mean(lData)
median=statistics.median(lData)
mode=statistics.mode(lData)
std = statistics.stdev(lData)
print("Mean: " +str(mean))
print("Median: " +str(median))
print("Mode: " +str(mode))
print("Standard Deviation: " +str(std))

fig =ff.create_distplot([lData],["Savings"],show_hist=False)
fig.show()